

var filters = {    
  toFix: function (value) {       
      return value.toFixed(2) // 此处2为保留两位小数，保留几位小数，这里写几    
  },
  toStr: function (value) {       
      return value.toString()
  },
  toNum: function (value) {       
      return value.toNumber()
  },
}
/**
 * 处理字符串为*格式, 中间显示自定义*号
 * str 需要处理的字符串
 * startLength 前面显示的字符串长度
 * endLength后面显示的字符串长度
 */
 
var sub = function(str, startLength, endLength) {
  if(str.length == 0 || str == undefined) {
    return "";
  }
  var length = str.length;
  if(length >= startLength + endLength) {
    // 判断当字符串长度为二时, 隐藏末尾
    if(length === 2) {
      return str.substring(0, 1) + '*';
    }
    else if(3 <= length && length <= 10) {
      return str.substring(0, 1) + '**';
    }
    // 判断字符串长度大于首尾字符串长度之和时, 隐藏中间部分
    else if(length >= 11) {
      return str.substring(0, startLength) + '****' + str.substring(length - endLength, length);
    } else {
      return str
    }
  }
}

/* 
* 参数说明： 
* @param {Number|String} number：要格式化的数字,必传
* @param {String} currencySymbol：千分位符号,选填(默认值'¥')
* @param {Number} decimals：保留几位小数,选填(默认值2)
* @param {String} decPoint：小数点符号,选填(默认值'.')
* @param {String} thousandsSep：千分位符号,选填(默认值'')
* */
var currencyFormat = function (number, currencySymbol, decimals, decPoint, thousandsSep) {
  currencySymbol = currencySymbol || '¥';
  decimals = decimals || 2;
  decPoint = decPoint || '.';
  thousandsSep = thousandsSep || '';
  var regexp = getRegExp('[^0-9+-Ee.]', 'g');
  number = (number + '').replace(regexp, '');
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    s = '',
    toFixedFix = function (n, prec) {
      var k = Math.pow(10, prec)
      return '' + (Math.ceil((n * k).toFixed(prec)) / k).toFixed(prec)
    };

  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');

  if (thousandsSep) {
    var reg = getRegExp('(-?\d+)(\d{3})');
    while (reg.test(s[0])) {
      s[0] = s[0].replace(reg, "$1" + thousandsSep + "$2");
    }
  }

  if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    var array = [];
    array.length = prec - s[1].length + 1;
    s[1] += array.join('0');
  }
  return currencySymbol + ' ' + s.join(decPoint);
}

module.exports = {
  toFix: filters.toFix,
  toStr: filters.toStr,
  toNum: filters.toNum,//暴露接口调用
  sub: sub,
  currencyFormat: currencyFormat,
}